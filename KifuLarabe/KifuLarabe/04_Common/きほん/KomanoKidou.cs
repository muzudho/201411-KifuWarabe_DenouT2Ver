using Grayscale.KifuwaraneEntities.ApplicatedGame;
using Grayscale.KifuwaraneEntities.Sfen;
using Grayscale.KifuwaraneEntities.L03_Communication;

namespace Grayscale.KifuwaraneEntities.L04_Common
{
    /// <summary>
    /// 駒の軌道を、ここに書きます。
    /// </summary>
    public abstract class KomanoKidou
    {

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通上がるの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_上(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し上(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通左上がるの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_昇(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し昇(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通左寄りの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_射(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し射(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通左引きの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_沈(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し沈(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通引くの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_引(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し引(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通右引くの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_降(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し降(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通右寄りの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_滑(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し滑(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通右上がるの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstKantu_浮(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKantu_巻戻し浮(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩上がるの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_上(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppoA_巻戻し上(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩左上がるの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_昇(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し昇(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩左寄りの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_射(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し射(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩左引きの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_沈(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し沈(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩引くの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_引(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し引(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩右引くの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_降(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し降(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩右寄りの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_滑(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し滑(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 一歩右上がるの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_ji">(自)</param>
        /// <returns></returns>
        public static IMasus DstIppo_浮(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcIppo_巻戻し浮(sengo, masu_ji);
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 左桂馬飛びの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="itaru"></param>
        /// <returns></returns>
        public static IMasus DstKeimatobi_駆(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKeimatobi_巻戻し跳(GameTranslator.AlternateSengo( sengo), masu_ji);
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 右桂馬飛びの先の場所
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="itaru"></param>
        /// <returns></returns>
        public static IMasus DstKeimatobi_跳(Sengo sengo, M201 masu_ji)
        {
            return KomanoKidou.SrcKeimatobi_巻戻し駆(GameTranslator.AlternateSengo( sengo), masu_ji);
        }



        /// <summary>
        /// ************************************************************************************************************************
        /// 先後を指定することで、打てる枡　全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus Dst_歩打面(Sengo sengo)
        {
            Masus_Set dst = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│  │  │  │  │  │  │  │  │  │
                //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

                for (int suji = 9; suji >= 1; suji--)
                {
                    for (int dan = 9; dan >= 2; dan--)
                    {
                        M201 masu = M201Util.OkibaSujiDanToMasu( Okiba.ShogiBan, suji, dan);
                        dst.AddElement(masu);
                    }
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
                //　│  │  │  │  │  │  │  │  │  │
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

                for (int suji = 1; suji <= 9; suji++)
                {
                    for (int dan = 2; dan <= 9; dan++)
                    {
                        M201 masu = M201Util.OkibaSujiDanToMasu( Okiba.ShogiBan, suji, dan);
                        dst.AddElement(masu);
                    }
                }
            }

            return dst;
        }



        /// <summary>
        /// ************************************************************************************************************************
        /// 先後を指定することで、打てる枡　全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus Dst_桂打面(Sengo sengo)
        {
            Masus_Set dst = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│  │  │  │  │  │  │  │  │  │
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│  │  │  │  │  │  │  │  │  │
                //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

                for (int suji = 9; suji >= 1; suji--)
                {
                    for (int dan = 9; dan >= 3; dan--)
                    {
                        M201 masu = M201Util.OkibaSujiDanToMasu( Okiba.ShogiBan, suji, dan);
                        dst.AddElement(masu);
                    }
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
                //　│  │  │  │  │  │  │  │  │  │
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│  │  │  │  │  │  │  │  │  │
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
                //　│至│至│至│至│至│至│至│至│至│
                //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

                for (int suji = 1; suji <= 9; suji++)
                {
                    for (int dan = 3; dan <= 9; dan++)
                    {
                        M201 masu = M201Util.OkibaSujiDanToMasu( Okiba.ShogiBan, suji, dan);
                        dst.AddElement(masu);
                    }
                }
            }

            return dst;
        }

        /// <summary>
        /// ************************************************************************************************************************
        /// 先後を指定することで、打てる枡　全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus Dst_全打面(Sengo sengo)
        {
            Masus_Set dst = new Masus_Set();

            //******************************
            // △後手
            //******************************
            //******************************
            // ▲先手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│至│至│至│至│至│至│至│至│
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            if (Sengo.Gote == sengo)
            {
                for (int suji = 9; suji >= 1; suji-- )
                {
                    for (int dan = 9; dan >= 1; dan--)
                    {
                        M201 masu = M201Util.OkibaSujiDanToMasu( Okiba.ShogiBan, suji, dan);
                        dst.AddElement(masu);
                    }
                }
            }
            else
            {
                for (int suji = 1; suji <=9; suji++)
                {
                    for (int dan = 1; dan <= 9; dan++)
                    {
                        M201 masu = M201Util.OkibaSujiDanToMasu( Okiba.ShogiBan, suji, dan);
                        dst.AddElement(masu);
                    }
                }
            }

            return dst;
        }







        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通引きの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、飛車の(自)升の候補（Ａ方向）全てを返します。
        /// 
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し上(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcA;

            //******************************
            // △後手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │至│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A0│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A1│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A2│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │A3│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A4│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A5│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A6│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A7│  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘
            //　                  Ａ

            //******************************
            // ▲先手
            //******************************
            //　                  Ａ
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │A7│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A6│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A5│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A4│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │A3│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A2│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A1│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │A0│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │至│  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘

            M201 masu = M201Util.Offset(
                Okiba.ShogiBan, masu_itaru, sengo, Muki.上);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcA = new Masus_DirectedSegment(masu, sengo, Muki.上, 8);
            }
            else
            {
                srcA = new Masus_Set();
            }

            return srcA;
        }




        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通右引きの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、角の(自)升の候補（Ｂ方向）全てを返します。
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し昇(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcB;

            //******************************
            // △後手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│  │  │  │  │  │  │  │  │至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │B0│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │B1│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │B2│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │B3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │B4│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │B5│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │B6│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│B7│  │  │  │  │  │  │  │  │
            //Ｂ└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            //******************************
            // ▲先手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐Ｂ
            //　│  │  │  │  │  │  │  │  │B7│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │B6│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │B5│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │B4│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │B3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │B2│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │B1│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │B0│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│  │  │  │  │  │  │  │  │
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.昇);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcB = new Masus_DirectedSegment(masu, sengo, Muki.昇, 8);
            }
            else
            {
                srcB = new Masus_Set();
            }

            return srcB;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通右寄りの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、飛車の(自)升の候補（Ｃ方向）全てを返します。
        ///         
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し射(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcC;

            //******************************
            // △後手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //Ｃ│C7│C6│C5│C4│C3│C2│C1│C0│至│
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘

            //******************************
            // ▲先手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│G0│G1│G2│G3│G4│G5│G6│G7│Ｃ
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.射);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcC = new Masus_DirectedSegment(masu, sengo, Muki.射, 8);
            }
            else
            {
                srcC = new Masus_Set();
            }

            return srcC;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通右上がるの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、角の(自)升の候補（Ｄ方向）全てを返します。
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し沈(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcD;

            //******************************
            // △後手
            //******************************
            //Ｄ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│D7│  │  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │D6│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │D5│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │D4│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │D3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │D2│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │D1│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │D0│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │  │至│
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            //******************************
            // ▲先手
            //******************************
            //　┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│至│  │  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │D0│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │D1│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │D2│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │D3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │D4│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │D5│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │D6│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │  │D7│
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘Ｄ

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.沈);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcD = new Masus_DirectedSegment(masu, sengo, Muki.沈, 8);
            }
            else
            {
                srcD = new Masus_Set();
            }

            return srcD;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通上がるの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、飛車の(自)升の候補（Ｅ方向）全てを返します。
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し引(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcE;

            //******************************
            // △後手
            //******************************
            //　                  Ｅ
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │E7│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E6│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E5│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E4│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │E3│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E2│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E1│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E0│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │至│  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘

            //******************************
            // ▲先手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │至│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E0│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E1│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E2│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │E3│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E4│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E5│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E6│  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │E7│  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘
            //　                  Ｅ

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.引);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcE = new Masus_DirectedSegment(masu, sengo, Muki.引, 8);
            }
            else
            {
                srcE = new Masus_Set();
            }

            return srcE;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通左上がるの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、角の(自)升の候補（Ｆ方向）全てを返します。
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し降(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcF;

            //******************************
            // △後手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐Ｆ
            //　│  │  │  │  │  │  │  │  │F7│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │F6│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │F5│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │F4│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │F3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │F2│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │F1│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │F0│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│  │  │  │  │  │  │  │  │
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            //******************************
            // ▲先手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│  │  │  │  │  │  │  │  │至│
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │F0│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │F1│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │F2│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │F3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │F4│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │F5│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │F6│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│F7│  │  │  │  │  │  │  │  │
            //Ｆ└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.降);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcF = new Masus_DirectedSegment(masu, sengo, Muki.降, 8);
            }
            else
            {
                srcF = new Masus_Set();
            }

            return srcF;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通左寄りの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、飛車の(自)升の候補（Ｇ方向）全てを返します。
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し滑(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcG;

            //******************************
            // △後手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│至│G0│G1│G2│G3│G4│G5│G6│G7│Ｇ
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘

            //******************************
            // ▲先手
            //******************************
            //  ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //Ｇ│G7│G6│G5│G4│G3│G2│G1│G0│至│
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  ├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //  │  │  │  │  │  │  │  │  │  │
            //  └─┴─┴─┴─┴─┴─┴─┴─┴─┘

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.滑);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcG = new Masus_DirectedSegment(masu, sengo, Muki.滑, 8);
            }
            else
            {
                srcG = new Masus_Set();
            }

            return srcG;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// 貫通左引くの元の場所
        /// ************************************************************************************************************************
        /// 
        ///         (至)升を指定することで、角の(自)升の候補（Ｈ方向）全てを返します。
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKantu_巻戻し浮(Sengo sengo, M201 masu_itaru)
        {
            IMasus srcH;

            //******************************
            // △後手
            //******************************
            //　┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│至│  │  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │H0│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │H1│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │H2│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │H3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │H4│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │H5│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │H6│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │  │H7│
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘Ｈ

            //******************************
            // ▲先手
            //******************************
            //Ｈ┌─┬─┬─┬─┬─┬─┬─┬─┬─┐
            //　│H7│  │  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │H6│  │  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │H5│  │  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │H4│  │  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │H3│  │  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │H2│  │  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │H1│  │  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │H0│  │
            //　├─┼─┼─┼─┼─┼─┼─┼─┼─┤
            //　│  │  │  │  │  │  │  │  │至│
            //　└─┴─┴─┴─┴─┴─┴─┴─┴─┘

            M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.浮);
            if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
            {
                srcH = new Masus_DirectedSegment(masu, sengo, Muki.浮, 8);
            }
            else
            {
                srcH = new Masus_Set();
            }

            return srcH;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ａ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppoA_巻戻し上(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcA = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┬─┬─┐
                //│  │  │  │
                //├─┼─┼─┤
                //│  │至│  │
                //├─┼─┼─┤
                //│  │Ａ│  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 0, 1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcA.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┬─┬─┐
                //│  │Ａ│  │
                //├─┼─┼─┤
                //│  │至│  │
                //├─┼─┼─┤
                //│  │  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 0, -1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcA.AddElement(masu);
                }
            }

            return srcA;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｂ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し昇(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcB = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┬─┬─┐
                //│  │  │  │
                //├─┼─┼─┤
                //│  │至│  │
                //├─┼─┼─┤
                //│Ｂ│  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, 1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcB.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┬─┬─┐
                //│  │  │Ｂ│
                //├─┼─┼─┤
                //│  │至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, -1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcB.AddElement(masu);
                }
            }

            return srcB;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｃ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し射(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcC = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┬─┬─┐
                //│  │  │  │
                //├─┼─┼─┤
                //│Ｃ│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, 0);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcC.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┬─┬─┐
                //│  │  │  │
                //├─┼─┼─┤
                //│　│至│Ｃ│
                //├─┼─┼─┤
                //│　│  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, 0);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcC.AddElement(masu);
                }
            }

            return srcC;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｄ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し沈(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcD = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┬─┬─┐
                //│Ｄ│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.沈);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcD.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┬─┬─┐
                //│　│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │Ｄ│
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, sengo, Muki.沈);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcD.AddElement(masu);
                }
            }

            return srcD;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｅ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し引(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcE = new Masus_Set();


            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┬─┬─┐
                //│　│Ｅ│  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 0, -1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcE.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┬─┬─┐
                //│　│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│Ｅ│  │
                //└─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 0, 1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcE.AddElement(masu);
                }
            }


            return srcE;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｆ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し降(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcF = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //  ┌─┬─┬─┐
                //  │  │  │Ｆ│
                //  ├─┼─┼─┤
                //  │  │至│  │
                //  ├─┼─┼─┤
                //  │  │  │  │
                //  └─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, -1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcF.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //  ┌─┬─┬─┐
                //  │  │  │  │
                //  ├─┼─┼─┤
                //  │  │至│  │
                //  ├─┼─┼─┤
                //  │Ｆ│  │  │
                //  └─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, 1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcF.AddElement(masu);
                }
            }

            return srcF;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｇ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し滑(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcG = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //  ┌─┬─┬─┐
                //  │  │  │  │
                //  ├─┼─┼─┤
                //  │  │至│Ｇ│
                //  ├─┼─┼─┤
                //  │  │  │  │
                //  └─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, 0);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcG.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //  ┌─┬─┬─┐
                //  │  │  │  │
                //  ├─┼─┼─┤
                //  │Ｇ│至│  │
                //  ├─┼─┼─┤
                //  │  │  │  │
                //  └─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, 0);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcG.AddElement(masu);
                }
            }

            return srcG;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｈ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcIppo_巻戻し浮(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcH = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //  ┌─┬─┬─┐
                //  │  │  │  │
                //  ├─┼─┼─┤
                //  │  │至│  │
                //  ├─┼─┼─┤
                //  │  │  │Ｈ│
                //  └─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, 1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcH.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //  ┌─┬─┬─┐
                //  │Ｈ│  │  │
                //  ├─┼─┼─┤
                //  │  │至│  │
                //  ├─┼─┼─┤
                //  │  │  │  │
                //  └─┴─┴─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, -1);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcH.AddElement(masu);
                }
            }

            return srcH;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｉ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKeimatobi_巻戻し跳(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcI = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┐　┌─┐
                //│Ｉ│　│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│　│  │  │
                //└─┘　└─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, -2);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcI.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┐　┌─┐
                //│  │　│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│  │　│Ｉ│
                //└─┘　└─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, 2);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcI.AddElement(masu);
                }
            }

            return srcI;
        }


        /// <summary>
        /// ************************************************************************************************************************
        /// (至)升を指定することで、王の(自)升の候補（Ｊ方向）全てを返します。
        /// ************************************************************************************************************************
        /// </summary>
        /// <param name="sengo"></param>
        /// <param name="masu_itaru"></param>
        /// <returns></returns>
        public static IMasus SrcKeimatobi_巻戻し駆(Sengo sengo, M201 masu_itaru)
        {
            Masus_Set srcJ = new Masus_Set();

            if (Sengo.Gote == sengo)
            {
                //******************************
                // △後手
                //******************************
                //┌─┐　┌─┐
                //│  │　│Ｊ│
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│  │  │  │
                //└─┘　└─┘

                //----------
                // 競合駒マス(pre masu)
                //----------
                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, -1, -2);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcJ.AddElement(masu);
                }
            }
            else
            {
                //******************************
                // ▲先手
                //******************************
                //┌─┐　┌─┐
                //│  │　│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│　│至│  │
                //├─┼─┼─┤
                //│　│  │  │
                //├─┼─┼─┤
                //│Ｊ│　│  │
                //└─┘　└─┘

                M201 masu = M201Util.Offset(Okiba.ShogiBan, masu_itaru, 1, 2);
                if (Okiba.ShogiBan == GameTranslator.Masu_ToOkiba(masu))
                {
                    srcJ.AddElement(masu);
                }
            }

            return srcJ;
        }

    }

}
